-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Data Management modules for planning exams
--   
--   See README at <a>https://github.com/obcode/plexams#readme</a>
@package plexams-datamgmt
@version 1.1.0.0

module Plexams.Export.Common
unscheduledExamsSortedByRegistrations :: Plan -> [Exam]
notPlannedByMeExams :: Plan -> [Exam]

module Plexams.Export.HTML
planToHTMLTable :: Maybe [Ancode] -> Plan -> String

module Plexams.Export.Markdown

-- | Erzeugt eine Markdown-Version des aktuellen Plans TODO: Tage
--   gruppieren
planToMD :: Plan -> String

module Plexams.Export.Misc
semesterConfigAsString :: Plan -> String
exportAddExamToSlots :: [AddExamToSlot] -> String
exportAddRoomToExams :: [AddRoomToExam] -> String
exportAddInvigilatorToRoomOrSlot :: [AddInvigilatorToRoomOrSlot] -> String
exportHandicaps :: Plan -> String

module Plexams.Export.ZPA
planToZPA :: Plan -> String
planForStudents :: Plan -> ByteString
studentRegsToZPA :: Plan -> String

module Plexams.Import
setPlexamsDirectory :: IO ()
importPlan :: IO (Maybe Plan, [Text])
importExamSlotsFromYAMLFile :: FilePath -> IO (Maybe [AddExamToSlot])
importAddInvigilatorToRoomOrSlotFromYAMLFile :: FilePath -> IO (Maybe [AddInvigilatorToRoomOrSlot])
importZPAExamsFromJSONFile :: FilePath -> IO (Maybe [ZPAExam])

module Plexams.UpdateFiles
updatePlanManipFile :: FilePath -> AddExamToSlot -> IO ()
updateInvigilationFile :: FilePath -> AddInvigilatorToRoomOrSlot -> IO ()
